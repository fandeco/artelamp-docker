<?php
	ini_set("memory_limit", '5120m');
	include_once MODX_CORE_PATH . 'classes/feeds/yandex.feed.php';

	/**
	 * Запись новых слов в словари
	 */
	class CrontabControllerFeedsYml extends modCrontabController
	{
		public function initialize()
		{
			return parent::initialize(); // TODO: Change the autogenerated stub
		}


		public function process()
		{
			if (file_exists(MODX_BASE_PATH . 'media/_yandex.xml')) {
				unlink(MODX_BASE_PATH . 'media/_yandex.xml');
			}
			$limit = 50000;

			$site_url    = $this->modx->getOption('site_url');
			$content     = ['web'];
			$root_id     = 2;
			$size_images = 'medium';

			$categories = [];
			$q          = $this->modx->newQuery('msCategory');
			$q->select('id,pagetitle,template');
			$q->where([
						  ['context_key:IN' => $content, 'published' => 1, 'deleted' => 0, 'class_key' => 'msCategory'],
					  ]);
			if ($q->prepare() && $q->stmt->execute()) {
				while ($row = $q->stmt->fetch(PDO::FETCH_ASSOC)) {
					if ((int)$row['template'] === 14) {
						continue;
					}
					$categories[$row['id']] = $row['pagetitle'];
				}
			}

			$products = [];
			$q        = $this->modx->newQuery('msProduct');
			$q->select($this->modx->getSelectColumns('msProduct', 'msProduct', '', []));
			$q->select($this->modx->getSelectColumns('msProductData', 'Data'));
			$q->select('Vendor.name as vendor_name');
			$q->select('Data.is_price as is_price');
			$q->where([
						  ['context_key:IN' => $content, 'published' => 1, 'deleted' => 0, 'class_key' => 'msProduct', 'parent:IN' => array_keys($categories)],
					  ]);
			$q->innerJoin('msProductData', 'Data', 'Data.id = msProduct.id');
			$q->leftJoin('msVendor', 'Vendor', 'Vendor.id = Data.vendor');
			$q->limit($limit);
			if ($q->prepare() && $q->stmt->execute()) {
				while ($row = $q->stmt->fetch(PDO::FETCH_ASSOC)) {
					if (!(bool)$row['is_price']) {
						continue;
					}
//					if (!(bool)$row['in_stock']) {
//						continue;
//					}
					$products[$row['id']] = $row;
				}
			}

			if (!empty($products)) {
				$q = $this->modx->newQuery('msProductFile');
				$q->select('product_id,url,rank');
				$q->where([
							  'product_id:IN' => array_column($products, 'id'),
							  'path:LIKE'     => "%{$size_images}%",
						  ]);
				$q->sortby('rank');
				if ($q->prepare() && $q->stmt->execute()) {
					while ($row = $q->stmt->fetch(PDO::FETCH_ASSOC)) {
						$products[$row['product_id']]['pictures'][$row['rank']] = $site_url . $row['url'];
					}
				}
			}


			$fields          = [
				'volume'              => 'Объем',
				'weight_netto'        => 'Вес нетто',
				'width'               => 'Длина',
				'power'               => 'Мощность',
				'voltage'             => 'Вольтаж',
				'box_height'          => 'Высота коробки',
				'box_length'          => 'Длина коробки',
				'box_width'           => 'Ширина коробки',
				'ploshad_osvesheniya' => 'Площадь освещения',
				'country_orig'        => 'Страна происхождения',
				'collection'          => 'Коллекция',
			];
			$units           = [
				'weight_netto'        => 'кг',
				'width'               => 'см',
				'box_length'          => 'см',
				'box_width'           => 'см',
				'box_height'          => 'см',
				'power'               => 'W',
				'voltage'             => 'W',
				'ploshad_osvesheniya' => 'м2',
			];
			$ymlYandex       = new ymlYandex($this->modx);
			$parent          = 39640;
			$template = 14;
			$collectionPages = $this->modx->query("SELECT lower(pagetitle) as collection,id FROM ara3_site_content WHERE `parent`=$parent AND `template`=$template")->fetchAll(PDO::FETCH_KEY_PAIR);
			$response        = $ymlYandex->newYml(MODX_BASE_PATH . 'media/_yandex.xml')
										 ->setShop($this->modx->getOption('site_name'), $this->modx->getOption('site_name'), $this->modx->getOption('site_url'))
										 ->setCurrency('RUB')
										 ->setCategory($categories)
										 ->setProducts($products, function ($offer, $product = []) use (&$fields, &$ymlYandex, &$units, $collectionPages) {
											 /* @var YandexOffer $offer */
											 /* @var ymlYandex $ymlYandex */
											 $col = mb_strtolower($product['collection']);
											 if ($col && array_key_exists($col, $collectionPages)) {
												 $url = $this->modx->makeUrl((int)$collectionPages[$col], '', '', 1);
												 if ($url) {
													 $offer->setCollectionUri($url);
												 } else {
													 $alias = modResource::filterPathSegment($this->modx, $product['collection']);
													 $offer->setCollectionUri('https://artelamp.ru/collection/' . $alias);
												 }
											 }
											 foreach ($fields as $field => $caption) {
												 if (!empty($product[$field]) and $product[$field] != '0.00' and $product[$field] != '0.000') {
													 $unit = '';
													 if (is_array($units) && array_key_exists($field, $units)) {
														 $unit = $units[$field];
													 }

													 $offer->addParam($ymlYandex->addParam($caption, $product[$field], $unit));
												 } elseif ($caption === 'Коллекция') {
													 $offer->addParam($ymlYandex->addParam($caption, "0"));
												 }
											 }
											 return $offer;
										 },            'RUB')
										 ->generate()
			;
			$x               = file_get_contents(MODX_BASE_PATH . 'media/_yandex.xml');
			$x               = str_replace(['dev1.artelamp.massive.ru', 'artelamp.it', 'http://artelamp.ru'], ['artelamp.ru', 'artelamp.ru', 'https://artelamp.ru'], $x);

			$date = date(DATE_ATOM);
			$x    = preg_replace('@<yml_catalog\s*date="\d{4}-\d{2}-\d{2} \d{2}:\d{2}">@i', '<yml_catalog date="' . $date . '">', $x);
			unlink(MODX_BASE_PATH . 'media/yandex.xml');
			file_put_contents(MODX_BASE_PATH . 'media/yandex.xml', $x);
			file_put_contents(MODX_BASE_PATH . 'media/mindbox.xml', $x);

			if ($response !== TRUE) {
				echo '<pre>';
				print_r($response);
				die;
			}

			$filename = $ymlYandex->getOutputFile();

			$value = str_ireplace(MODX_BASE_PATH, $this->modx->getOption('site_url'), $filename);
			$this->print_msg('URL: ' . $value);
		}
	}
