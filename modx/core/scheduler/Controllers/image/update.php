<?php

/**
 * Обновление фотографий с медиа сервера
 */
use GuzzleHttp\Client;

class CrontabControllerImageUpdate extends modCrontabController
{
    public $classKey = 'msProductData';
    public $defaultLimit = 100;

    /* @var fdkNewDownloadImages $fdkNewDownloadImages */
    public $fdkNewDownloadImages;

    public function initialize()
    {
        include_once MODX_CORE_PATH . 'classes/fdkNewDownloadImages.php';
        $this->fdkNewDownloadImages = new fdkNewDownloadImages($this->modx);
        return parent::initialize(); // TODO: Change the autogenerated stub
    }

    protected $statusCode = [];
    protected $imagesUpdate = [];


    protected $start_timer;

    public function timerStart()
    {
        $this->start_timer = microtime(true);
    }

    public function timerEnd($id)
    {
        $time_str = round(microtime(true) - $this->start_timer, 4) . ' сек.';
        $this->print_msg("[{$id}] {$this->service->recordsCount}/" . $this->total . ' time: ' . $time_str);
    }

    protected function prepareListQueryBeforeCount(xPDOQuery $c)
    {
        $c->where([
            'artikul_1c:!=' => '',
            'update_images' => 1
        ]);
        return parent::prepareListQueryBeforeCount($c); // TODO: Change the autogenerated stub
    }

    /**
     * @param xPDOObject|xPDOSimpleObject|msProductData $object
     */
    protected function prepare($object)
    {
        $product_id = $object->get('id');
        $article = $object->get('artikul_1c');
        $this->timerStart();
        $status_code = $this->fdkNewDownloadImages->getImages($object, $article);
        $this->timerEnd('ID:' . $product_id . ' A: ' . $article);
        $this->statusCode[$article] = $status_code;
        $this->imagesUpdate[] = $product_id;
        parent::prepare($object); // TODO: Change the autogenerated stub
    }


    protected function afterPassingAllRecords()
    {

        // Снимаем метку о том что нужно обновить изображение
        if (!empty($this->imagesUpdate)) {
            $ids = implode(',', $this->imagesUpdate);
            $table = $this->modx->getTableName('msProductData');
            $count = $this->modx->exec("UPDATE {$table} SET update_images = '0'  WHERE id IN ({$ids})");
        }

        // Отправляем статусы по обработанным артикулам
        try {
            $client = new Client(['base_uri' => 'https://ms.fandeco.ru/rest/']);
            $options = [
                'json' => [
                    'articles' => $this->statusCode,
                    'source' => $this->modx->getOption('media_server_images_source')
                ]
            ];
            $response = $client->put('trigger/status/', $options);
            $content = $response->getBody()->getContents();
            $content = $this->modx->fromJSON($content);
            if (empty($content['success'])) {
                echo '<pre>';
                print_r($content);
                die;
            }
        } catch (Exception $e) {
            echo '<pre>';
            print_r($e->getMessage());
            die;
        }

        parent::afterPassingAllRecords(); // TODO: Change the autogenerated stub
    }
}
