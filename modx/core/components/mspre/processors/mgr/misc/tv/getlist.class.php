<?php

class modTemplateVarGetListProcessor extends modObjectGetListProcessor
{
    public $classKey = 'modTemplateVar';
    public $languageTopics = array('mspre:default');
    public $defaultSortField = 'id';
    public $defaultSortDirection = 'ASC';
    public $permission = 'view_tv';

    //public $permission = 'view_template';

    public function prepareQueryBeforeCount(xPDOQuery $c)
    {
        // Join делается для предоствращения показа не существующих тв параметров
        $c->leftJoin('mspreTvField', 'mspreTvField', 'mspreTvField.name = modTemplateVar.type');

        // Делаем выборку чтобы не показывались вложенные
        $types = array();
        $q = $this->modx->newQuery('mspreTvField');
        $q->select('name');
        if ($q->prepare() && $q->stmt->execute()) {
            while ($row = $q->stmt->fetch(PDO::FETCH_ASSOC)) {
                $types[] = $row['name'];
            }
        }
        $c->where(array('modTemplateVar.type:IN' => $types));

        $c->select($this->modx->getSelectColumns('modTemplateVar', 'modTemplateVar'));
        if ($query = $this->getProperty('query')) {
            $c->where(array(
                'modTemplateVar.caption:LIKE' => "%$query%",
                'OR:modTemplateVar.name:LIKE' => "%$query%",
            ));
        }

        $show_all = $this->setCheckbox('show_all');
        if (!$show_all) {
            if ($template = $this->getProperty('template') or $template = $this->getProperty('category')) {
                // Будет отправлен дополнительный запрос на получение всех опций выбранной категориии
                $c->select($this->modx->getSelectColumns('modTemplateVarTemplate', 'Template'));
                $c->innerJoin('modTemplateVarTemplate', 'Template', 'Template.tmplvarid = modTemplateVar.id');
                $c->groupby('modTemplateVar.id');
                $c->sortby('Template.rank', 'DESC');
                $c->where(array('Template.templateid' => $template));
            }
        }


        return $c;
    }

    public function beforeIteration(array $list)
    {
        /*if ($this->getProperty('combo', false) && !$this->getProperty('query', false)) {
            $empty = array(
                'id' => 0,
                'name' => $this->modx->lexicon('mspre_empty_change_tv'),
                'description' => '',
                'editor_type' => 0,
                'icon' => '',
                'template_type' => 0,
                'content' => '',
                'locked' => false,
            );
            #$empty['name'] = '';
            $list[] = $empty;
        }*/
        return $list;
    }

    public function prepareRow(xPDOObject $object)
    {
        if ($this->getProperty('combo')) {
            $array = array(
                'id' => $object->get('id'),
                'type' => $object->get('type'),
                'name' => $object->get('name'),
                'caption' => $object->get('caption'),
            );
        } else {
            $array = $object->toArray();
        }
        return $array;
    }

    public function afterIteration(array $list)
    {
        return parent::afterIteration($list); // TODO: Change the autogenerated stub
    }
}

return 'modTemplateVarGetListProcessor';