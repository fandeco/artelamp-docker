<?php

class msOptionGetListProcessor extends modObjectGetListProcessor
{
    public $classKey = 'msOption';
    public $defaultSortField = 'msOption.id';
    public $defaultSortDirection = 'ASC';

    /* @var null|array $parents */
    public $parents = null;

    public function initialize()
    {
        $this->modx->getService('minishop2', 'miniShop2', MODX_CORE_PATH . 'components/minishop2/model/');
        return parent::initialize(); // TODO: Change the autogenerated stub
    }

    /**
     * @param xPDOQuery $c
     *
     * @return xPDOQuery
     */
    public function prepareQueryBeforeCount(xPDOQuery $c)
    {
        $c->select($this->modx->getSelectColumns('msOption', 'msOption'));

        if ($query = $this->getProperty('query')) {
            $c->where(array(
                'caption:LIKE' => "%$query%",
                'OR:key:LIKE' => "%$query%",
            ));
        }

        $show_all = $this->setCheckbox('show_all');
        if (!$show_all) {
            if ($category = $this->getProperty('category')) {
                // Будет отправлен дополнительный запрос на получение всех опций выбранной категориии
                $c->select($this->modx->getSelectColumns('msCategoryOption', 'Category', '', array('category_id')));
                $c->innerJoin('msCategoryOption', 'Category', 'Category.option_id = msOption.id');
                $c->groupby('msOption.id');
                $c->sortby('Category.rank', 'DESC');
                $c->where(array(
                    'Category.active' => true
                ));
                $c->where(array('Category.category_id' => $category));
            }
        }

        return $c;
    }


    /**
     * @param xPDOObject $object
     *
     * @return array
     */
    public function prepareRow(xPDOObject $object)
    {
        return $object->toArray();
    }


    public function afterIteration(array $list)
    {
        return parent::afterIteration($list); // TODO: Change the autogenerated stub
    }

}

return 'msOptionGetListProcessor';