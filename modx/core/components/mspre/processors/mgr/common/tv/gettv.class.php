<?php

class msPreEnteredTvProcessor extends modObjectProcessor
{
    /* @var mspre $mspre */
    public $mspre = null;

    /* @var modTemplateVar $tv */
    public $tv = null;
    public $languageTopics = array('mspre:default');

    public function initialize()
    {
        $tvname = $this->getProperty('tvname');
        if (empty($tvname)) {
            $msg = $this->modx->lexicon('mspre_common_tv_err_tvname');
            $this->modx->log(modX::LOG_LEVEL_ERROR, $msg, '', __METHOD__, __FILE__, __LINE__);
            return $msg;
        }
        $controller = $this->getProperty('controller');
        if (empty($controller)) {
            $msg = $this->modx->lexicon('mspre_common_tv_err_controller');
            $this->modx->log(modX::LOG_LEVEL_ERROR, $msg, '', __METHOD__, __FILE__, __LINE__);
            return $msg;
        }
        $mode = trim($this->getProperty('mode'));
        if (empty($mode)) {
            $msg = $this->modx->lexicon('mspre_common_tv_err_mode');
            $this->modx->log(modX::LOG_LEVEL_ERROR, $msg, '', __METHOD__, __FILE__, __LINE__);
            return $msg;
        }

        /* @var mspre $mspre */
        $this->mspre = $this->modx->getService('mspre', 'mspre', MODX_CORE_PATH . 'components/mspre/model/');
        if (!$this->mspre instanceof mspre) {
            return 'Could not load class mspre';
        }

        return parent::initialize(); // TODO: Change the autogenerated stub
    }

    public function process()
    {
        $controller = $this->getProperty('controller');
        $tvname = $this->getProperty('tvname');
        $mode = trim($this->getProperty('mode'));
        $method = 'field' . ucfirst($mode);
        $key = prefixTvAdd($tvname);


        $ManagerController = $this->mspre->loadManagerController($controller);
        if (!$ManagerController instanceof mspreMainController) {
            return $this->fail('Could not load controller ' . $controller);
        }
        $ManagerController->initDefaultConfig($controller);



        /* @var mspreActionsTv $mspreActions */
        $mspreActions = $this->mspre->loadActionClass('tv');
        if (!$mspreActions) {
            return $this->fail("Could not load class mspreActionsTv");
        }

        if (!method_exists($mspreActions, $method)) {
            return $this->fail("Could not found method {$method} class mspreActionsTv");
        }


        if (!$data = $mspreActions->{$method}($key)) {
            return $this->fail("Could not get data {$method} class mspreActionsTv");
        }
        return $this->success('', array('params' => $data));
    }

    /**
     * @param $msg
     * @return array|string
     */
    public function fail($msg)
    {
        $this->modx->log(modX::LOG_LEVEL_ERROR, $msg, '', __METHOD__, __FILE__, __LINE__);
        return $this->failure($msg);
    }
}

return 'msPreEnteredTvProcessor';