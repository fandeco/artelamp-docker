<?php

class msPreOptionsRenderProcessor extends modProcessor
{
    /* @var mspre $mspre */
    public $mspre = null;

    /* @var msOption $Option */
    public $Option = null;

    /* @var string $type */
    public $type = null;
    public $languageTopics = array('mspre:default');

    public function initialize()
    {
        $option = $this->getProperty('option');
        $this->type = $this->getProperty('type', 'options');

        if ($this->type == 'options') {
            if (!$this->Option = $this->modx->getObject('msOption', array('key' => $option))) {
                return $this->modx->lexicon('mspre_error_could_load_not_option', array('option' => $option));
            }
        }

        $mode = $this->getProperty('mode');
        if (empty($mode)) {
            return $this->modx->lexicon('mspre_common_tv_err_mode');
        }

        /* @var mspre $mspre */
        $this->mspre = $this->modx->getService('mspre', 'mspre', MODX_CORE_PATH . 'components/mspre/model/');
        if (!$this->mspre instanceof mspre) {
            return $this->modx->lexicon('mspre_err_mspre_could_not');
        }

        return parent::initialize(); // TODO: Change the autogenerated stub
    }


    public function process()
    {
        $option = $this->getProperty('option');
        $mode = $this->getProperty('mode');
        $method = 'field' . ucfirst($mode);

        $class = null;
        $data = null;
        switch ($this->type) {
            case 'options':
                $class = 'options';
                $key = prefixOptionsAdd($option);
                break;
            case 'fields':
                $this->mspre->controller = 'product';
                $this->mspre->classKey = 'msProduct';
                $class = 'fields';
                $key = prefixFieldsAdd($option);
                break;
            default:
                break;
        }


        if (!$class) {
            return $this->failure($this->modx->lexicon('mspre_error_could_not_class_render', array('type' => $this->type)));
        }

        /* @var mspreActionsFields|mspreActionsOptions $mspreActions */
        $mspreActions = $this->mspre->loadActionClass($class);
        if (!$mspreActions) {
            return $this->fail("Could not load class mspreActionsOptions" . ucfirst($this->type));
        }


        if (!method_exists($mspreActions, $method)) {
            return $this->fail("Could not found method {$method} class mspreActions" . ucfirst($this->type));
        }


        if (!$data = $mspreActions->{$method}($key)) {
            return $this->fail("Could not get data {$method} class mspreActions" . ucfirst($this->type));
        }

        return $this->success('', array('params' => $data));
    }

    /**
     * @param $msg
     * @return array|string
     */
    public function fail($msg)
    {
        $this->modx->log(modX::LOG_LEVEL_ERROR, $msg, '', __METHOD__, __FILE__, __LINE__);
        return $this->failure($msg);
    }
}

return 'msPreOptionsRenderProcessor';