{"version":3,"names":[],"mappings":"","sources":["assets/components/clientconfig/js/mgr/extras/colorpicker/colorpickerfield.js"],"sourcesContent":["/**\n * @class Ext.ux.form.ColorPickerField\n * @extends Ext.form.TriggerField\n * This class makes Ext.ux.ColorPicker available as a form field.\n * @license: BSD\n * @author: Robert B. Williams (extjs id: vtswingkid)\n * @constructor\n * Creates a new ColorPickerField\n * @param {Object} config Configuration options\n * @version 1.1.2\n */\n\nExt.namespace(\"Ext.ux\", \"Ext.ux.menu\", \"Ext.ux.form\");\nif (Ext.version.substr(0, 1) == \"2\") {\n\tExt.ux.menu.ColorItem = function(config){\n\t\tif (!config) config = {};\n\t\tconfig.style = \"width:350px;\";\n\t\tExt.ux.menu.ColorItem.superclass.constructor.call(this, new Ext.ux.ColorPicker(config), config);\n\t\tthis.picker = this.component;\n\t\tthis.addEvents('select');\n\t\tthis.picker.on(\"render\", function(picker){\n\t\t\tpicker.getEl().swallowEvent(\"click\");\n\t\t});\n\t\tthis.picker.on(\"select\", this.onSelect, this);\n\t};\n\tExt.extend(Ext.ux.menu.ColorItem, Ext.menu.Adapter, {\n\t\t// private\n\t\tonSelect: function(picker, color){\n\t\t\tthis.fireEvent(\"select\", this, color, picker);\n\t\t\tExt.ux.menu.ColorItem.superclass.handleClick.call(this);\n\t\t}\n\t});\n\tExt.ux.menu.ColorMenu = function(config){\n\t\tExt.ux.menu.ColorMenu.superclass.constructor.call(this, config);\n\t\tthis.plain = true;\n\t\tvar ci = new Ext.ux.menu.ColorItem(config);\n\t\tthis.add(ci);\n\t\tthis.picker = ci.picker;\n\t\tthis.relayEvents(ci, [\"select\"]);\n\t};\n\tExt.extend(Ext.ux.menu.ColorMenu, Ext.menu.Menu, {\n\t\tbeforeDestroy: function(){\n\t\t\tthis.picker.destroy();\n\t\t}\n\t});\n} else {\n\tExt.ux.menu.ColorMenu = Ext.extend(Ext.menu.Menu, {\n\t\tenableScrolling: false,\n\t\thideOnClick: true,\n\t\tinitComponent: function(){\n\t\t\tExt.apply(this, {\n\t\t\t\tplain: true,\n\t\t\t\tshowSeparator: false,\n\t\t\t\titems: this.picker = new Ext.ux.ColorPicker(Ext.apply({\n//\t\t\t\t\tinternalRender: this.strict || !Ext.isIE,\n\t\t\t\t\tstyle: 'width:350px;'\n\t\t\t\t}, this.initialConfig))\n\t\t\t});\n\t\t\tthis.picker.purgeListeners();\n\t\t\tExt.ux.menu.ColorMenu.superclass.initComponent.call(this);\n\t\t\tthis.relayEvents(this.picker, ['select']);\n\t\t\tthis.on('select', this.menuHide, this);\n\t\t\tif (this.handler) {\n\t\t\t\tthis.on('select', this.handler, this.scope || this)\n\t\t\t}\n\t\t},\n\t\tmenuHide: function(){\n\t\t\tif (this.hideOnClick) {\n\t\t\t\tthis.hide(true);\n\t\t\t}\n\t\t}\n\t});\n}\nExt.ux.form.ColorPickerField = Ext.extend(Ext.form.TriggerField,  {\n    initComponent : function(){\n        Ext.ux.form.ColorPickerField.superclass.initComponent.call(this);\n\t\tthis.menu = new Ext.ux.menu.ColorMenu();\n    },\n\tsetValue : function(v){\n\t\tif (/^[0-9a-fA-F]{6}$/.test(v)) {\n\t\t\tExt.ux.form.ColorPickerField.superclass.setValue.apply(this, arguments);\n\t\t\tvar i = this.menu.picker.rgbToHex(this.menu.picker.invert(this.menu.picker.hexToRgb(v)));\n\t\t\tthis.el.applyStyles('background: #' + v + '; color: #' + i + ';');\n\t\t}\n    },\n    onDestroy : function(){\n        if(this.menu) {\n            this.menu.destroy();\n        }\n        if(this.wrap){\n            this.wrap.remove();\n        }\n        Ext.ux.form.ColorPickerField.superclass.onDestroy.call(this);\n    },\n    onBlur : function(){\n        Ext.ux.form.ColorPickerField.superclass.onBlur.call(this);\n\t\tvar v = this.getValue();\n\t\tif (/^[0-9a-fA-F]{6}$/.test(v)) {\n\t\t\tvar i = this.menu.picker.rgbToHex(this.menu.picker.invert(this.menu.picker.hexToRgb(v)));\n\t\t\tthis.el.applyStyles('background: #'+v+'; color: #'+i+';');\n\t\t}else this.el.applyStyles('background: #ffffff; color: #000000;');\n    },\n\tmenuListeners : {\n        select: function(m, c){\n            this.setValue(c);\n\t        this.fireEvent(\"select\", this, c);\n            this.focus.defer(10, this);\n        },\n        show : function(m){ // retain focus styling\n            this.onFocus();\n        },\n        hide : function(){\n            this.focus.defer(10, this);\n            var ml = this.menuListeners;\n            this.menu.un(\"select\", ml.select,  this);\n            this.menu.un(\"show\", ml.show,  this);\n            this.menu.un(\"hide\", ml.hide,  this);\n        }\n    },\n    onTriggerClick : function(){\n        if(this.disabled){\n            return;\n        }\n        this.menu.on(Ext.apply({}, this.menuListeners, {\n           scope:this\n        }));\n        this.menu.show(this.el, \"tl-bl?\");\n        this.menu.picker.setColor(this.getValue());\n    }\n});\nExt.reg(\"colorpickerfield\", Ext.ux.form.ColorPickerField);\n\n"],"file":"colorpickerfield.js"}